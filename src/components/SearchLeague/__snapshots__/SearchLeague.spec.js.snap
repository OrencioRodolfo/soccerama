// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search league form component Must render properly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchLeague
    getLeagues={[Function]}
    leagues={
      Array [
        Object {
          "current_season_id": 1,
          "id": 1,
          "name": "sample",
          "seasons": Object {
            "data": Array [
              Object {
                "id": 2,
                "name": "season",
              },
            ],
          },
        },
      ]
    }
    queryStanding={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "current_season_id": 1,
              "id": 1,
              "name": "sample",
              "seasons": Object {
                "data": Array [
                  Object {
                    "id": 2,
                    "name": "season",
                  },
                ],
              },
            },
            undefined,
          ],
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "autoComplete": "off",
      "children": Array [
        <WithStyles(FormControl)
          style={
            Object {
              "width": "50%",
            }
          }
        >
          <WithStyles(InputLabel)
            htmlFor="league"
          >
            League
          </WithStyles(InputLabel)>
          <WithStyles(Select)
            inputProps={
              Object {
                "id": "league",
                "name": "league",
              }
            }
            onChange={[Function]}
            style={
              Object {
                "width": "100%",
              }
            }
            value={-1}
          >
            <WithStyles(MenuItem)
              value={1}
            >
              <em>
                sample
              </em>
            </WithStyles(MenuItem)>
          </WithStyles(Select)>
        </WithStyles(FormControl)>,
        false,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <WithStyles(InputLabel)
              htmlFor="league"
            >
              League
            </WithStyles(InputLabel)>,
            <WithStyles(Select)
              inputProps={
                Object {
                  "id": "league",
                  "name": "league",
                }
              }
              onChange={[Function]}
              style={
                Object {
                  "width": "100%",
                }
              }
              value={-1}
            >
              <WithStyles(MenuItem)
                value={1}
              >
                <em>
                  sample
                </em>
              </WithStyles(MenuItem)>
            </WithStyles(Select)>,
          ],
          "style": Object {
            "width": "50%",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "League",
              "htmlFor": "league",
            },
            "ref": null,
            "rendered": "League",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <WithStyles(MenuItem)
                  value={1}
                >
                  <em>
                    sample
                  </em>
                </WithStyles(MenuItem)>,
              ],
              "inputProps": Object {
                "id": "league",
                "name": "league",
              },
              "onChange": [Function],
              "style": Object {
                "width": "100%",
              },
              "value": -1,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "children": <em>
                    sample
                  </em>,
                  "value": 1,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "sample",
                  },
                  "ref": null,
                  "rendered": "sample",
                  "type": "em",
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      false,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "autoComplete": "off",
        "children": Array [
          <WithStyles(FormControl)
            style={
              Object {
                "width": "50%",
              }
            }
          >
            <WithStyles(InputLabel)
              htmlFor="league"
            >
              League
            </WithStyles(InputLabel)>
            <WithStyles(Select)
              inputProps={
                Object {
                  "id": "league",
                  "name": "league",
                }
              }
              onChange={[Function]}
              style={
                Object {
                  "width": "100%",
                }
              }
              value={-1}
            >
              <WithStyles(MenuItem)
                value={1}
              >
                <em>
                  sample
                </em>
              </WithStyles(MenuItem)>
            </WithStyles(Select)>
          </WithStyles(FormControl)>,
          false,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <WithStyles(InputLabel)
                htmlFor="league"
              >
                League
              </WithStyles(InputLabel)>,
              <WithStyles(Select)
                inputProps={
                  Object {
                    "id": "league",
                    "name": "league",
                  }
                }
                onChange={[Function]}
                style={
                  Object {
                    "width": "100%",
                  }
                }
                value={-1}
              >
                <WithStyles(MenuItem)
                  value={1}
                >
                  <em>
                    sample
                  </em>
                </WithStyles(MenuItem)>
              </WithStyles(Select)>,
            ],
            "style": Object {
              "width": "50%",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "League",
                "htmlFor": "league",
              },
              "ref": null,
              "rendered": "League",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <WithStyles(MenuItem)
                    value={1}
                  >
                    <em>
                      sample
                    </em>
                  </WithStyles(MenuItem)>,
                ],
                "inputProps": Object {
                  "id": "league",
                  "name": "league",
                },
                "onChange": [Function],
                "style": Object {
                  "width": "100%",
                },
                "value": -1,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "children": <em>
                      sample
                    </em>,
                    "value": 1,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "sample",
                    },
                    "ref": null,
                    "rendered": "sample",
                    "type": "em",
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        false,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
